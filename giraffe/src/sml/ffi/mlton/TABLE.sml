(* Copyright (C) 2012, 2018 Phil Clayton <phil.clayton@veonix.com>
 *
 * This file is part of the Giraffe Library runtime.  For your rights to use
 * this file, see the file 'LICENCE.RUNTIME' distributed with Giraffe Library
 * or visit <http://www.giraffelibrary.org/licence-runtime.html>.
 *)

(**
 * The signature TABLE defines an abstract data type that provides a mutable
 * association map for polymorphic values.  Unlike a general-purpose
 * association map, the keys that identify the elements cannot be specified
 * externally but are generated by the data structure: when a value is added,
 * a key that uniquely identifies the element is returned.
 *)
signature TABLE =
  sig
    (**
     * The type `key` uniquely identifies a value in the table.
     *
     * `fmtKey` returns a string representation of an `key`.  Different
     * `key` values should have a different string representation.
     *)
    type key
    val fmtKey : key -> string

    type 'a t

    val new : unit -> 'a t
    val insert : 'a t -> 'a -> key
    val delete : 'a t -> key -> 'a option
    val lookup : 'a t -> key -> 'a option
  end
