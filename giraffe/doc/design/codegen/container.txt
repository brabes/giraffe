=Container=

Context

  repo
    the repository in use

  typeInfo
    the container type info



==Container structure==

The container structure is defined as follows:

  tag = GIRepository.TypeInfo.getTag typeInfo


  <ArrayContainerStructure(typeInfo)>

    if tag is ARRAY


  <raise Error "not supported">

    otherwise


where

  ArrayContainerStructure(arrayTypeInfo)
    is defined as follows:

      elemTypeInfo = GIRepository.TypeInfo.getParamType arrayTypeInfo 0


      structure <ArrayStructId(arrayTypeInfo)>Type =
        CValue<FuncId(arrayTypeInfo)>Type(
          structure CElemType = <ElemStructId(elemTypeInfo)>.C.ValueType
          structure ElemSequence = CValueVectorSequence(<ElemStructId(elemTypeInfo)>.C.ValueType)
        )
      structure <ArrayStructId(arrayTypeInfo)> = <FuncId(arrayTypeInfo)>(<ArrayStructId(arrayTypeInfo)>Type)

        if not isPointer(elemTypeInfo)



      structure <ArrayStructId(arrayTypeInfo)>Type =
        CPointer<FuncId(arrayTypeInfo)>Type(
          structure CElemType = <ArrayStructId(elemTypeInfo)>.C.PointerType
          structure Sequence = VectorSequence
        )
      structure <ArrayStructId(arrayTypeInfo)> = <FuncId(arrayTypeInfo)>(<ArrayStructId(arrayTypeInfo)>Type)

        if isPointer(elemTypeInfo)


    where


      FuncId(arrayTypeInfo)
        is defined as follows:

          CArray<N>

        where

          N is as follows:

            isZeroTerminated = GIRepository.TypeInfo.isZeroTerminated arrayTypeInfo

              isZeroTerminated            | N
            ==============================+===================
              false                       | N
            ------------------------------+-------------------
              true                        | <>
            ------------------------------+-------------------


      isPointer(elemTypeInfo) is as defined for functions.


