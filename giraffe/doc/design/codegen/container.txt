=Container=

Context

  repo
    the repository in use

  typeInfo
    the container type info


Conditions

  isValueRecord(structInfo)
    indicates whether structName and structNamespace have been identified as a
    value-like record in the configuration where

      structName      = getName structInfo
      structNamespace = BaseInfo.getNamespace structInfo


==Container structure==

The container structure is defined as follows:

  tag = GIRepository.TypeInfo.getTag typeInfo


  <ArrayContainerStructure(typeInfo)>

    if tag is ARRAY


  <raise Error "not supported">

    otherwise


where

  ArrayContainerStructure(arrayTypeInfo)
    is defined as follows:

      elemTypeInfo = GIRepository.TypeInfo.getParamType arrayTypeInfo 0


      structure <ArrayStructId(arrayTypeInfo)>Type =
        CValue<FuncId(arrayTypeInfo)>Type(
          structure CElemType = <ElemStructId(elemTypeInfo)>.C.ValueType
          structure ElemSequence = CValueVectorSequence(<ElemStructId(elemTypeInfo)>.C.ValueType)
        )
      structure <ArrayStructId(arrayTypeInfo)> = <FuncId(arrayTypeInfo)>(<ArrayStructId(arrayTypeInfo)>Type)

        if not isPointer(elemTypeInfo)



      structure <ArrayStructId(arrayTypeInfo)>Type =
        CPointer<FuncId(arrayTypeInfo)>Type(
          structure CElemType = <ArrayStructId(elemTypeInfo)>.C.PointerType
          structure Sequence = VectorSequence
        )
      structure <ArrayStructId(arrayTypeInfo)> = <FuncId(arrayTypeInfo)>(<ArrayStructId(arrayTypeInfo)>Type)

        if isPointer(elemTypeInfo)


    where


      FuncId(arrayTypeInfo)
        is defined as follows:

          <ArrayType(arrayTypeInfo)>


      isPointer(typeInfo)
        is defined as follows:

        tag = GIRepository.TypeInfo.getTag typeInfo

        Conversion from tag is as follows:

          ERROR     --->    <raise Error "not expected">
          FILENAME  --->    true
          ARRAY     --->    true
          GLIST     --->    <raise Error "not supported">
          GSLIST    --->    <raise Error "not supported">
          GHASH     --->    <raise Error "not supported">
          VOID      --->    <raise Error "not expected">
          BOOLEAN   --->    false
          CHAR      --->    false
          UCHAR     --->    false
          INT       --->    false
          UINT      --->    false
          SHORT     --->    false
          USHORT    --->    false
          LONG      --->    false
          ULONG     --->    false
          INT8      --->    false
          UINT8     --->    false
          INT16     --->    false
          UINT16    --->    false
          INT32     --->    false
          UINT32    --->    false
          INT64     --->    false
          UINT64    --->    false
          FLOAT     --->    false
          DOUBLE    --->    false
          SSIZE     --->    false
          SIZE      --->    false
          OFFSET    --->    <raise Error "not supported">
          INTPTR    --->    <raise Error "not supported">
          UINTPTR   --->    <raise Error "not supported">
          UTF8      --->    true
          UNICHAR   --->    false
          INTERFACE --->    isInterfacePointer(typeInfo)


      isInterfacePointer(interfaceTypeInfo)
        is defined as follows:

        infoType = GIRepository.InfoType.getType interfaceTypeInfo

        Conversion from infoType is as follows:

          false
            if infoType is FLAGS _ | ENUM _

          isValueRecord(structInfo)
            if infoType is STRUCT structInfo

          true
            otherwise


